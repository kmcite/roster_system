// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'experimental/models.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(16, 118218883016875288),
      name: 'Roster',
      lastPropertyId: const obx_int.IdUid(6, 7883123812020465580),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6986517358077299563),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7883123812020465580),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'entries', srcEntity: 'RosterEntry', srcField: '')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(17, 1763743209025074720),
      name: 'RosterEntry',
      lastPropertyId: const obx_int.IdUid(5, 161203473608205982),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8069296721055359746),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3171898860525881376),
            name: 'dayIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6434895247584992590),
            name: 'shiftIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1801366958723503071),
            name: 'staffId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(10, 6218048612506205871),
            relationTarget: 'Staff'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 161203473608205982),
            name: 'rosterId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(11, 1296803911096035038),
            relationTarget: 'Roster')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(18, 5561124568798348512),
      name: 'Staff',
      lastPropertyId: const obx_int.IdUid(2, 1994296646552289455),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 9178202410121071567),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1994296646552289455),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'assignments', srcEntity: 'RosterEntry', srcField: '')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(18, 5561124568798348512),
      lastIndexId: const obx_int.IdUid(12, 6309324351434315426),
      lastRelationId: const obx_int.IdUid(3, 943376139478585074),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        2289325974192559564,
        5062752304585562854,
        4894003141083644363,
        6008705478251524574,
        6446674098497221030,
        1037033454154897317,
        306697420954171672,
        983612330360943847,
        8134966868814773174,
        1311240464714513490,
        4508153890465708761,
        5551826528944662575,
        5571319811998276081,
        2618107764139558690,
        4550263067238731886
      ],
      retiredIndexUids: const [6309324351434315426],
      retiredPropertyUids: const [
        6975780576965000901,
        7067778625942908990,
        8733029196969304079,
        5762413289601235622,
        2738706626447693343,
        4470013046260367914,
        8503475576663280169,
        3002979580710142282,
        7189212433922948732,
        9192363063625858955,
        440355000731063553,
        1574951959756768652,
        8796745615569567283,
        6092316795105159196,
        6769711075247949043,
        96892981566993712,
        2019244637737119042,
        3318948807972760863,
        6509158969475415593,
        5297404525479449150,
        4723373256716558984,
        9132477216987270428,
        881722989469486464,
        9180762248382323313,
        8938108093261621015,
        3767926195102112176,
        7524534174128593096,
        2370800592049068179,
        8084540787037179745,
        8875272350324962762,
        8956891419200513436,
        4374238359993440749,
        6678576579027240543,
        2364521983352944548,
        7143678677828882983,
        2809618888529491012,
        9138274419428944085,
        6148518901348161122,
        3258636765577102770,
        3019405870787362644,
        3795912360768535261,
        2724512538934338284,
        3806849756277987569,
        4801151776936527411,
        722383521784087581,
        5199961745600888181,
        5948040945758415304,
        4280435001546437388,
        114974341232525405,
        5024644449132439095,
        8651539040365336257,
        3874116585410179955,
        8943735135607875777,
        443312061099977313,
        8967349217768853688,
        6259525082354080684,
        2778490016492473477,
        2672340701974887560,
        2268536444087574621,
        8808419099395569438
      ],
      retiredRelationUids: const [1536938014201421682, 943376139478585074],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Roster: obx_int.EntityDefinition<Roster>(
        model: _entities[0],
        toOneRelations: (Roster object) => [],
        toManyRelations: (Roster object) => {
              obx_int.RelInfo<RosterEntry>.toOneBacklink(5, object.id,
                  (RosterEntry srcObject) => srcObject.roster): object.entries
            },
        getId: (Roster object) => object.id,
        setId: (Roster object, int id) {
          object.id = id;
        },
        objectToFB: (Roster object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(5, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Roster()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..name = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 14, '');
          obx_int.InternalToManyAccess.setRelInfo<Roster>(
              object.entries,
              store,
              obx_int.RelInfo<RosterEntry>.toOneBacklink(
                  5, object.id, (RosterEntry srcObject) => srcObject.roster));
          return object;
        }),
    RosterEntry: obx_int.EntityDefinition<RosterEntry>(
        model: _entities[1],
        toOneRelations: (RosterEntry object) => [object.staff, object.roster],
        toManyRelations: (RosterEntry object) => {},
        getId: (RosterEntry object) => object.id,
        setId: (RosterEntry object, int id) {
          object.id = id;
        },
        objectToFB: (RosterEntry object, fb.Builder fbb) {
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.dayIndex);
          fbb.addInt64(2, object.shiftIndex);
          fbb.addInt64(3, object.staff.targetId);
          fbb.addInt64(4, object.roster.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = RosterEntry()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..dayIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..shiftIndex =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          object.staff.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.staff.attach(store);
          object.roster.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.roster.attach(store);
          return object;
        }),
    Staff: obx_int.EntityDefinition<Staff>(
        model: _entities[2],
        toOneRelations: (Staff object) => [],
        toManyRelations: (Staff object) => {
              obx_int.RelInfo<RosterEntry>.toOneBacklink(
                      4, object.id, (RosterEntry srcObject) => srcObject.staff):
                  object.assignments
            },
        getId: (Staff object) => object.id,
        setId: (Staff object, int id) {
          object.id = id;
        },
        objectToFB: (Staff object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Staff()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..name = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '');
          obx_int.InternalToManyAccess.setRelInfo<Staff>(
              object.assignments,
              store,
              obx_int.RelInfo<RosterEntry>.toOneBacklink(
                  4, object.id, (RosterEntry srcObject) => srcObject.staff));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Roster] entity fields to define ObjectBox queries.
class Roster_ {
  /// See [Roster.id].
  static final id =
      obx.QueryIntegerProperty<Roster>(_entities[0].properties[0]);

  /// See [Roster.name].
  static final name =
      obx.QueryStringProperty<Roster>(_entities[0].properties[1]);

  /// see [Roster.entries]
  static final entries =
      obx.QueryBacklinkToMany<RosterEntry, Roster>(RosterEntry_.roster);
}

/// [RosterEntry] entity fields to define ObjectBox queries.
class RosterEntry_ {
  /// See [RosterEntry.id].
  static final id =
      obx.QueryIntegerProperty<RosterEntry>(_entities[1].properties[0]);

  /// See [RosterEntry.dayIndex].
  static final dayIndex =
      obx.QueryIntegerProperty<RosterEntry>(_entities[1].properties[1]);

  /// See [RosterEntry.shiftIndex].
  static final shiftIndex =
      obx.QueryIntegerProperty<RosterEntry>(_entities[1].properties[2]);

  /// See [RosterEntry.staff].
  static final staff =
      obx.QueryRelationToOne<RosterEntry, Staff>(_entities[1].properties[3]);

  /// See [RosterEntry.roster].
  static final roster =
      obx.QueryRelationToOne<RosterEntry, Roster>(_entities[1].properties[4]);
}

/// [Staff] entity fields to define ObjectBox queries.
class Staff_ {
  /// See [Staff.id].
  static final id = obx.QueryIntegerProperty<Staff>(_entities[2].properties[0]);

  /// See [Staff.name].
  static final name =
      obx.QueryStringProperty<Staff>(_entities[2].properties[1]);

  /// see [Staff.assignments]
  static final assignments =
      obx.QueryBacklinkToMany<RosterEntry, Staff>(RosterEntry_.staff);
}
